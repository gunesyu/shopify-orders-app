// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DB_URL")
}

model Shop {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  url       String   @unique
  name      String
  token     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  Order     Order[]

  @@index([url])
  @@index([email])
  @@map("shop")
}

model Customer {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  name       String
  customerId String   @unique @map("customer_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  Order      Order[]

  @@index([email])
  @@map("customer")
}

// this is a hypertable
model Order {
  id         Int      @default(autoincrement())
  orderId    String   @unique @map("order_id")
  shopId     Int      @map("shop_id")
  customerId Int      @map("customer_id")
  total      Float
  currency   String
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @updatedAt @map("updated_at")

  shop     Shop     @relation(fields: [shopId], references: [id])
  customer Customer @relation(fields: [customerId], references: [id])

  @@unique([id, createdAt], name: "idx_unique_ping_log_id_created_at")
  @@map("order")
}
