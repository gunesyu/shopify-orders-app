services:
  db:
    container_name: shopify-app-db
    image: timescale/timescaledb-ha:pg16
    ports:
      - '${DB_PORT}:${DB_PORT}'
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    volumes:
      - postgres:/home/postgres/pgdata/data
    restart: unless-stopped
    networks:
      app_network:
        aliases:
          - ${DB_HOST}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    container_name: shopify-app
    build:
      context: ./app
      dockerfile: Dockerfile.local
    ports:
      - '${APP_PORT}:${APP_PORT}'
      - '9229:9229'
    environment:
      PRISMA_DB_URL: "${PRISMA_DB_PROVIDER}://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?schema=public"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./app:/app
      - ./app/node_modules:/app/node_modules
    networks:
      - app_network
    healthcheck:
      test: ['CMD-SHELL', 'nest info']
      interval: 10s
      timeout: 2s
      retries: 1

  ui:
    container_name: shopify-app-ui
    build:
      context: ./ui
      dockerfile: Dockerfile.local
    ports:
      - '${UI_PORT}:${UI_PORT}'
      - '5173:5173'
    environment:
      APP_PORT: ${APP_PORT}
    env_file:
      - ./ui/.env
    depends_on:
      app:
        condition: service_healthy
    volumes:
      - ./ui:/usr/src/app
      - ./ui:/usr/src/app/node_modules
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres:
